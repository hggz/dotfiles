#!/usr/bin/env bash

OS="`uname`"

case $OS in
  'Linux')
    SOURCE='.bashrc'
    ;;
  'Darwin')
    SOURCE='.profile'
    ;;
  *) ;;
esac

repo_path=$HOME/.ha100

checkVariable() {
  if test ! $(which vim); then
    echo "Error: vim not found! Please install it first."
    exit 1
  fi

  if [ -e $repo_path ]; then
    echo "Error: $repo_path has already exist! Please remove it before install."
    exit 1
  fi
}

downloadRepo() {
  git clone --recursive https://github.com/ha100/dotfiles.git $repo_path
  cd $repo_path
  if [ ! "$?" -eq '0' ]; then
    echo "Error: clone repository failed!"
    exit 1
  fi
}

compileVim() {
  cd ~/.ha100/vim.symlink/bundle/vim

  `./configure 
  # LDFLAGS="-L/usr/non-standard-path/python/lib"
    --prefix="/usr/local" \
    --enable-gui=no \
    --enable-largefile \
    --with-tlib=ncurses \
    --with-features=huge \
    --disable-netbeans \
    --without-x \
    --disable-nls \
    --enable-multibyte \
    --enable-cscope \
    --enable-luainterp \
    --enable-rubyinterp \
    --enable-perlinterp \
    --enable-tclinterp \
    --enable-pythoninterp \
    --enable-python3interp \
    --with-compiledby="ha100 <hastik@antik.sk>"`

  `make -j4`

  `sudo make install`
}

installVoltron() {
  cd ~/.ha100/vim.symlink/bundle/voltron
  ./install.sh
  sudo pip install voltron-web
  echo "checkout http://localhost:5555"
}

compileYouCompleteMe() {
  cd ~/.vim/bundler/YouCompleterMe/
  git submodule update --init --recursive
  CXX="clang++" ./install.py --system-libclang --system-boost --clang-completer #--gocode-completer --tern-completer
}

setupGitAutocompletion() {
  mkdir -p ~/.ha100/Scripts
  curl https://raw.githubusercontent.com/git/git/master/contrib/completion/git-completion.bash -o ~/.ha100/Scripts/.git-completion.bash
  echo "if [ -f ~/.ha100/Scripts/.git-completion.bash ]; then
    . ~/.ha100/Scripts/.git-completion.bash
  fi" >> ~/${SOURCE}
}

setupShell() {
  echo "source ~/.ha100/.shell_prompt.sh" >> ~/${SOURCE}
  source ~/${SOURCE}
}

compileHtop() {
  cd ~/.vim/bundler/htop/
  ./autogen.sh
  ./configure
  make
  make install
  echo "export HTOPRC=\"~/.ha100/htoprc.symlink\"" > ~/${SOURCE}
  source ~/${SOURCE}
}

downloadFonts() {
  git clone https://github.com/powerline/fonts.git
  cd fonts
  ./install.sh

  cd ..
  rm -rf fonts
}

compileOclint() {
  cd ~/.ha100/vim.symlink/bundle/oclint/oclint-scripts/
  ./make

  echo "OCLINT_HOME=~/.ha100/vim.symlink/bundle/oclint/build/oclint-release
  export PATH=$OCLINT_HOME/bin:$PATH" >> ~/${SOURCE}
  source ~/${SOURCE}
}

setupCoreML() {
  pip install -U coremltools
}

linkFiles() {
  ln -sf $HOME/.ha100/vimrc.symlink $HOME/.vimrc
  ln -sf $HOME/.ha100/vim.symlink $HOME/.vim
  ln -sf $HOME/.ha100/tmux.symlink $HOME/.tmux.conf
  ln -sf $HOME/.ha100/ctags.symlink $HOME/.ctags
  ln -sf $HOME/.ha100/lldbinit-lldb.symlink $HOME/.lldbinit-lldb
  ln -sf $HOME/.ha100/swimma.sh /usr/local/bin/swimma
  chmod +x $HOME/.ha100/swimma.sh
}

checkVariable
downloadRepo
downloadFonts
compileOclint
linkFiles
installVoltron
compileYouCompleteMe
compileHtop
setupGitAutocompletion
setupShell
setupCoreML
$repo_path/install.sh
compileVim

echo "Install finished!"

exit 0
